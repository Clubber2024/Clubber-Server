
services:
  backend:
    container_name: backend
    image: ssuclubber/clubber-backend-dev
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./logs:/logs
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:8080/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - clubber

  frontend:
    container_name: frontend
    image: ssuclubber/clubber-front-dev
    environment:
      - TZ=Asia/Seoul
    expose:
      - "3000"
    networks:
      - clubber

  nginx:
    container_name: nginx
    image: ssuclubber/clubber-nginx-dev
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./nginx/:/etc/nginx/
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - /var/lib/GeoIP/GeoLite2-Country.mmdb:/var/lib/GeoIP/GeoLite2-Country.mmdb
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - backend
      - frontend
    networks:
      - clubber

  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    environment:
      - TZ=Asia/Seoul
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot && nginx -s reload; sleep 12h; done;'"
    networks:
      - clubber

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SERVER_HTTP_PORT=4000
    container_name: grafana
    ports:
      - "4000:4000"
#    volumes:
#      - ./grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

networks:
  clubber: