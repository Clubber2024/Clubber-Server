#name: CI-CD Main
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  CI-CD:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: make application.yml
#        run: |
#          cd ./src/main/resources
#          touch ./application.yml
#          echo "${{ secrets.YML }}" > ./application.yml
#        shell: bash
#
#      - name: make application-prod.yml
#        run: |
#          cd ./src/main/resources
#          touch ./application-prod.yml
#          echo "${{ secrets.YML_PROD }}" > ./application-prod.yml
#        shell: bash
#
#      - name: Gradle Caching
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Build with Gradle
#        run: ./gradlew clean build -x test
#
#      - name: Docker Hub Login
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Docker build & push to prod
#        run: |
#          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }} .
#          docker push ${{ secrets.DOCKER_REPO }}
#
#      - name: Copy docker-compose.yml to EC2
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.HOST_PROD }}
#          username: ubuntu
#          key: ${{ secrets.PRIVATE_KEY }}
#          source: ./docker-compose.yml
#          target: /home/ubuntu
#
#      - name: Deploy to prod
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST_PROD }}
#          username: ubuntu
#          key: ${{ secrets.PRIVATE_KEY }}
#          script: |
#            cd /home/ubuntu
#            sudo docker-compose down
#            sudo docker-compose pull ${{ secrets.DOCKER_REPO }}
#            sudo docker-compose up -d
#            sudo docker image prune -f
#
#
#
#
#
#
#
#
#
#
#
