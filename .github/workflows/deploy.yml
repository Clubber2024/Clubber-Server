#name: CI-CD
#
#on:
#  push:
#    branches: dev
#
#
#env:
#  S3_BUCKET_NAME: clubber-bucket
#  RESOURCE_PATH: ./src/main/resources/application-dev.yml
#  CODE_DEPLOY_APPLICATION_NAME: clubber-code-deploy
#  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: clubber-server
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v1
#        with:
#          java-version: 17
#
#      - name: make application.yml
#        run: |
#          #          mkdir ./src/main/resources # resources 폴더 생성
#               cd ./src/main/resources # resources 폴더로 이동
#               touch ./application.yml # application.yml 생성
#               echo "${{ secrets.YML }}" > ./application.yml # github actions에서 설정한 값을 application.yml 파일에 쓰기
#        shell: bash
#
#        # 환경별 yml 파일 생성(2) - dev
#      - name: make application-dev.yml
#        run: |
#          cd ./src/main/resources
#          touch ./application-dev.yml
#          echo "${{ secrets.YML_DEV }}" > ./application-dev.yml
#        shell: bash
#      #      - name: Set yml file
#      #        uses: microsoft/variable-substitution@v1
#      #        with:
#      #          files: ${{ env.RESOURCE_PATH }}
#      #        env:
#      #          spring.data.redis: ${{ secrets.REDIS_HOST }}
#      #          spring.datasource.url: ${{ secrets.RDS_HOST }}
#      #          spring.datasource.username: ${{ secrets.RDS_USERNAME }}
#      #          spring.datasource.password: ${{ secrets.RDS_PASSWORD }}
#      #          oauth.client-id: ${{ secrets.KAKAO_CLIENT_ID }}
#      #          oauth.admin-key: ${{ secrets.KAKAO_ADMIN_KEY }}
#      #          oauth.redirect-url: ${{ secrets.KAKAO_REDIRECT_URL }}
#      #          jwt.secret-key: ${{ secrets.JWT_SECRET }}
#      #          jwt.access-exp: ${{ secrets.JWT_ACCESS_EXP }}
#      #          jwt.refresh-exp: ${{ secrets.JWT_REFRESH_EXP }}
#
#      - name: Gradle Caching
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x ./gradlew
#        shell: bash
#
#      - name: Build and analyze
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: ./gradlew sonar --info --stacktrace
#
#      - name: Build with Gradle
#        run: ./gradlew clean build -x test
#        shell: bash
#
#      - name: Make zip file
#        run: zip -r ./$GITHUB_SHA.zip .
#        shell: bash
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_REGION }}
#
#      - name: Upload to S3
#        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip
#
#      - name: Code Deploy
#        run: |
#          aws deploy create-deployment \
#           --deployment-config-name CodeDeployDefault.AllAtOnce \
#           --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
#           --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
#           --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
